{"ast":null,"code":"var _jsxFileName = \"/Users/angentle/Documents/my_Workspace/REACT/isz-h5-hook/src/pages/testHook/DataFetch.js\";\nimport React, { useState, useEffect } from 'react';\nimport './DataFetch.scss';\nimport axios from 'axios';\n\nfunction DataFetch() {\n  const [data, setData] = useState({\n    hits: []\n  });\n  const [query, setQuery] = useState('redux');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [url, setUrl] = useState(`https://hn.algolia.com/api/v1/search?query=${query}`);\n  useEffect(() => {\n    console.log('333');\n    let res = null;\n\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n\n      try {\n        res = await axios(url);\n        setData(res);\n      } catch (error) {\n        setIsError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [url]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: query,\n    onChange: event => setQuery(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setUrl(`http://hn.algolia.com/api/v1/search?query=${query}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Search\"), isError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Something went wrong ...\"), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Loading ...\") : /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dataFetch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, data.hits.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.objectID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: item.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, item.title)))));\n}\n\nexport default DataFetch;","map":{"version":3,"sources":["/Users/angentle/Documents/my_Workspace/REACT/isz-h5-hook/src/pages/testHook/DataFetch.js"],"names":["React","useState","useEffect","axios","DataFetch","data","setData","hits","query","setQuery","isLoading","setIsLoading","isError","setIsError","url","setUrl","console","log","res","fetchData","error","event","target","value","map","item","objectID","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,GAAsB;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CACzB,8CAA6CO,KAAM,EAD1B,CAA9B;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,QAAIC,GAAG,GAAG,IAAV;;AACA,UAAMC,SAAS,GAAG,YAAY;AAE1BN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,UAAI;AACAO,QAAAA,GAAG,GAAG,MAAMf,KAAK,CAACW,GAAD,CAAjB;AACAR,QAAAA,OAAO,CAACY,GAAD,CAAP;AACH,OAHD,CAGE,OAAOE,KAAP,EAAc;AACZP,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AAEDF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAGH,KAfD;;AAiBAQ,IAAAA,SAAS;AAEZ,GAtBQ,EAsBN,CAACL,GAAD,CAtBM,CAAT;AA0BA,sBACI,uDACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAEN,KAFX;AAGI,IAAA,QAAQ,EAAEa,KAAK,IAAIZ,QAAQ,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMR,MAAM,CAAE,6CAA4CP,KAAM,EAApD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAUKI,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAVhB,EAYKF,SAAS,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADM,gBAGF;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,IAAI,CAACE,IAAL,CAAUiB,GAAV,CAAcC,IAAI,iBACf;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,IAAI,EAAED,IAAI,CAACX,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBW,IAAI,CAACE,KAAzB,CADJ,CADH,CADL,CAfZ,CADJ;AA0BH;;AAED,eAAevB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './DataFetch.scss'\nimport axios from 'axios';\n\nfunction DataFetch () {\n    const [data, setData] = useState({ hits: [] });\n    const [query, setQuery] = useState('redux')\n    const [isLoading, setIsLoading] = useState(false)\n    const [isError, setIsError] = useState(false);\n    const [url, setUrl] = useState(\n        `https://hn.algolia.com/api/v1/search?query=${query}`\n    );\n\n    useEffect(() => {\n        console.log('333')\n        let res = null\n        const fetchData = async () => {\n\n            setIsError(false)\n            setIsLoading(true);\n\n            try {\n                res = await axios(url);\n                setData(res);\n            } catch (error) {\n                setIsError(true)\n            }\n\n            setIsLoading(false);\n\n\n        }\n\n        fetchData()\n\n    }, [url]);\n\n\n\n    return (\n        <>\n            <input\n                type=\"text\"\n                value={query}\n                onChange={event => setQuery(event.target.value)}\n            />\n            <button type=\"button\" onClick={() => setUrl(`http://hn.algolia.com/api/v1/search?query=${query}`)}>\n                Search\n      </button>\n\n            {isError && <div>Something went wrong ...</div>}\n\n            {isLoading ? (\n                <div>Loading ...</div>\n            ) : (\n                    <ul className='dataFetch'>\n                        {data.hits.map(item => (\n                            <li key={item.objectID}>\n                                <a href={item.url}>{item.title}</a>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n        </>\n    );\n}\n\nexport default DataFetch;"]},"metadata":{},"sourceType":"module"}