{"ast":null,"code":"var _jsxFileName = \"/Users/angentle/Documents/my_Workspace/REACT/isz-h5-hook/src/pages/testHook/TestHook.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nconst TestHook = () => {\n  const history = useHistory();\n  const [count, setCount] = useState(0);\n  const [like, setLike] = useState(false);\n  const [obj, setObj] = useState({\n    a: 1,\n    b: 2\n  }); //只执行一次\n\n  useEffect(() => {\n    //相当于componentDidMount 挂载时执行\n    console.log('init');\n    return () => {\n      //相当于 componentWillUnmount 卸载时执行\n      console.log('umMount');\n    };\n  }, []);\n  useEffect(() => {\n    console.log(\"useEffect count\"); // 使用浏览器的 API 更新页面标题\n\n    document.title = `You clicked ${count} times`;\n    let timer = 0;\n    timer = setInterval(() => {\n      setCount(count + 1);\n    }, 1000); // 组件销毁时 执行return\n\n    return () => {\n      //每次重渲染都会执行\n      // 组件销毁时，清除定时器\n      clearInterval(timer);\n    };\n  }, [count]);\n  useEffect(() => {\n    console.log(\"useEffect like\");\n  }, [like]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"You clicked \", count, \" times\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Click me\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, obj.a, \",\", obj.b), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: _ => changeObj(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"change obj\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: _ => setLike(!like),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, like ? '喜欢' : '不喜欢'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: _ => history.push(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"to home\"));\n\n  function changeObj() {\n    console.log(555);\n    obj.a = 2;\n    obj.b = 4;\n    setObj({ ...obj\n    }); // setObj(obj) //不会触发state变化\n  }\n};\n\nexport default TestHook;","map":{"version":3,"sources":["/Users/angentle/Documents/my_Workspace/REACT/isz-h5-hook/src/pages/testHook/TestHook.jsx"],"names":["React","useState","useEffect","useHistory","TestHook","history","count","setCount","like","setLike","obj","setObj","a","b","console","log","document","title","timer","setInterval","clearInterval","_","changeObj","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC;AAC3BW,IAAAA,CAAC,EAAE,CADwB;AACrBC,IAAAA,CAAC,EAAE;AADkB,GAAD,CAA9B,CAJmB,CAQnB;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAO,MAAM;AACT;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAHD;AAIH,GAPQ,EAON,EAPM,CAAT;AASAb,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EADY,CAEZ;;AACAC,IAAAA,QAAQ,CAACC,KAAT,GAAkB,eAAcX,KAAM,QAAtC;AACA,QAAIY,KAAK,GAAG,CAAZ;AACAA,IAAAA,KAAK,GAAGC,WAAW,CAAC,MAAM;AACtBZ,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,KAFkB,EAEhB,IAFgB,CAAnB,CALY,CAUZ;;AACA,WAAO,MAAM;AACT;AAEA;AACAc,MAAAA,aAAa,CAACF,KAAD,CAAb;AACH,KALD;AAMH,GAjBQ,EAiBN,CAACZ,KAAD,CAjBM,CAAT;AAkBAJ,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEH,GAHQ,EAGN,CAACP,IAAD,CAHM,CAAT;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBF,KAAhB,WADJ,eAEI;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,GAAG,CAACE,CADT,OAEKF,GAAG,CAACG,CAFT,CALJ,eASI;AAAQ,IAAA,OAAO,EAAEQ,CAAC,IAAIC,SAAS,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI;AAAQ,IAAA,OAAO,EAAED,CAAC,IAAIZ,OAAO,CAAC,CAACD,IAAF,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,IAAI,GAAG,IAAH,GAAU,KAArD,CAVJ,eAWI;AAAQ,IAAA,OAAO,EAAEa,CAAC,IAAIhB,OAAO,CAACkB,IAAR,CAAa,GAAb,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,CADJ;;AAiBA,WAASD,SAAT,GAAsB;AAClBR,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAL,IAAAA,GAAG,CAACE,CAAJ,GAAQ,CAAR;AACAF,IAAAA,GAAG,CAACG,CAAJ,GAAQ,CAAR;AACAF,IAAAA,MAAM,CAAC,EAAE,GAAGD;AAAL,KAAD,CAAN,CAJkB,CAKlB;AACH;AACJ,CAjED;;AAmEA,eAAeN,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nconst TestHook = () => {\n    const history = useHistory();\n    const [count, setCount] = useState(0);\n    const [like, setLike] = useState(false);\n    const [obj, setObj] = useState({\n        a: 1, b: 2\n    })\n\n    //只执行一次\n    useEffect(() => {\n        //相当于componentDidMount 挂载时执行\n        console.log('init')\n        return () => {\n            //相当于 componentWillUnmount 卸载时执行\n            console.log('umMount')\n        }\n    }, [])\n\n    useEffect(() => {\n        console.log(\"useEffect count\")\n        // 使用浏览器的 API 更新页面标题\n        document.title = `You clicked ${count} times`;\n        let timer = 0\n        timer = setInterval(() => {\n            setCount(count + 1)\n        }, 1000)\n\n\n        // 组件销毁时 执行return\n        return () => {\n            //每次重渲染都会执行\n\n            // 组件销毁时，清除定时器\n            clearInterval(timer)\n        };\n    }, [count]);\n    useEffect(() => {\n        console.log(\"useEffect like\")\n\n    }, [like]);\n\n    return (\n        <div>\n            <p>You clicked {count} times</p>\n            <button onClick={() => setCount(count + 1)}>\n                Click me\n          </button>\n            <div>\n                {obj.a},\n                {obj.b}\n            </div>\n            <button onClick={_ => changeObj()}>change obj</button>\n            <button onClick={_ => setLike(!like)}>{like ? '喜欢' : '不喜欢'}</button>\n            <button onClick={_ => history.push(\"/\")}>to home</button>\n        </div >\n    );\n\n\n    function changeObj () {\n        console.log(555)\n        obj.a = 2\n        obj.b = 4\n        setObj({ ...obj })\n        // setObj(obj) //不会触发state变化\n    }\n}\n\nexport default TestHook"]},"metadata":{},"sourceType":"module"}