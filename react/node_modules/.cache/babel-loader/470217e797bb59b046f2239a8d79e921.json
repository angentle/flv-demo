{"ast":null,"code":"import \"antd-mobile/lib/button/style/css\";\nimport _Button from \"antd-mobile/lib/button\";\nimport \"antd-mobile/lib/input/style/css\";\nimport _Input from \"antd-mobile/lib/input\";\nvar _jsxFileName = \"/Users/angentle/Documents/my_Workspace/REACT/isz-h5-hook/src/pages/testVideo/TestVideo.js\";\nimport * as React from 'react';\nimport flv from 'flv.js';\nconst {\n  useState,\n  useEffect\n} = React; // interface LiveDemoProps {\n//     defaultUrl?: string,\n//     onUrlChange?: Function\n// }\n\nexport default function TestVodeo({\n  defaultUrl = 'http://ip:8000/live/stream.flv',\n  onUrlChange\n}) {\n  let player = null;\n  let playerDom = null;\n  const [liveUrl, setLiveUrl] = useState(defaultUrl);\n  useEffect(() => {\n    if (flv.isSupported) {\n      player = flv.createPlayer({\n        type: 'flv',\n        isLive: true,\n        hasAudio: false,\n        hasVideo: true,\n        url: liveUrl,\n        cors: true\n      }, {\n        enableWorker: false,\n        lazyLoadMaxDuration: 3 * 60,\n        seekType: 'range'\n      });\n      player.attachMediaElement(playerDom);\n      player.load();\n    } else {\n      console.log('Your browser is not support flv.js');\n    }\n  }, []);\n\n  function updatePlayer() {\n    if (player) {\n      player.unload();\n      player.detachMediaElement();\n      player.destroy();\n      player = null;\n    }\n\n    player = flv.createPlayer({\n      type: 'flv',\n      isLive: true,\n      hasAudio: false,\n      hasVideo: true,\n      url: liveUrl,\n      cors: true\n    }, {\n      enableWorker: false,\n      lazyLoadMaxDuration: 3 * 60,\n      seekType: 'range'\n    });\n    player.attachMediaElement(playerDom);\n    player.load();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-demo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modify-url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    value: liveUrl,\n    onChange: value => {\n      setLiveUrl(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(_Button, {\n    type: 'primary',\n    onClick: () => {\n      updatePlayer();\n      onUrlChange && onUrlChange(liveUrl);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"\\u4FEE\\u6539\")), /*#__PURE__*/React.createElement(\"video\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    controls: true,\n    className: \"video-demo\",\n    ref: e => playerDom = e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/angentle/Documents/my_Workspace/REACT/isz-h5-hook/src/pages/testVideo/TestVideo.js"],"names":["React","flv","useState","useEffect","TestVodeo","defaultUrl","onUrlChange","player","playerDom","liveUrl","setLiveUrl","isSupported","createPlayer","type","isLive","hasAudio","hasVideo","url","cors","enableWorker","lazyLoadMaxDuration","seekType","attachMediaElement","load","console","log","updatePlayer","unload","detachMediaElement","destroy","value","width","height","e"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Button, Input } from 'antd-mobile';\n\nimport flv from 'flv.js';\n\nconst { useState, useEffect } = React;\n\n// interface LiveDemoProps {\n//     defaultUrl?: string,\n//     onUrlChange?: Function\n// }\n\nexport default function TestVodeo ({ defaultUrl = 'http://ip:8000/live/stream.flv', onUrlChange }) {\n\n    let player = null;\n    let playerDom = null;\n\n    const [liveUrl, setLiveUrl] = useState(defaultUrl);\n\n    useEffect(() => {\n        if (flv.isSupported) {\n            player = flv.createPlayer({\n                type: 'flv',\n                isLive: true,\n                hasAudio: false,\n                hasVideo: true,\n                url: liveUrl,\n                cors: true\n            }, {\n                enableWorker: false,\n                lazyLoadMaxDuration: 3 * 60,\n                seekType: 'range'\n            });\n            player.attachMediaElement(playerDom);\n            player.load();\n\n        } else {\n            console.log('Your browser is not support flv.js');\n        }\n    }, []);\n\n    function updatePlayer () {\n        if (player) {\n            player.unload();\n            player.detachMediaElement();\n            player.destroy();\n            player = null;\n        }\n\n        player = flv.createPlayer({\n            type: 'flv',\n            isLive: true,\n            hasAudio: false,\n            hasVideo: true,\n            url: liveUrl,\n            cors: true\n        }, {\n            enableWorker: false,\n            lazyLoadMaxDuration: 3 * 60,\n            seekType: 'range'\n        });\n        player.attachMediaElement(playerDom);\n        player.load();\n    }\n\n    return (\n        <div className='live-demo'>\n            <div className=\"modify-url\">\n\n\n                <Input\n                    value={liveUrl}\n                    onChange={(value) => {\n                        setLiveUrl(value);\n                    }}\n                />\n\n\n                <Button\n                    type={'primary'}\n                    onClick={() => {\n                        updatePlayer();\n                        onUrlChange && onUrlChange(liveUrl);\n                    }}\n                >修改</Button>\n\n\n            </div>\n            <video\n                style={{ width: '100%', height: '100%' }}\n                controls\n                className='video-demo'\n                ref={(e) => playerDom = e}\n            ></video>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}